{
  "version": 3,
  "sources": ["../lib/accessors.js", "../lib/ndarray.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the index of the first element which passes a test implemented by a predicate function.\n*\n* @private\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Object} x - input array object\n* @param {Collection} x.data - input array data\n* @param {Array<Function>} x.accessors - array element accessors\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @param {Callback} clbk - callback function\n* @param {*} thisArg - execution context\n* @returns {integer} index\n*\n* @example\n* var toAccessorArray = require( '@stdlib/array-base-to-accessor-array' );\n* var arraylike2object = require( '@stdlib/array-base-arraylike2object' );\n*\n* function isEven( v ) {\n*     return v % 2.0 === 0.0;\n* }\n*\n* var x = [ 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ];\n*\n* var idx = gfindIndex( x.length, arraylike2object( toAccessorArray( x ) ), 1, 0, isEven );\n* // returns 3\n*/\nfunction gfindIndex( N, x, strideX, offsetX, clbk, thisArg ) {\n\tvar xbuf;\n\tvar get;\n\tvar ix;\n\tvar i;\n\n\t// Cache reference to array data:\n\txbuf = x.data;\n\n\t// Cache a reference to the element accessor:\n\tget = x.accessors[ 0 ];\n\n\tix = offsetX;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( clbk.call( thisArg, get( xbuf, ix ), i, ix, x ) ) {\n\t\t\treturn i;\n\t\t}\n\t\tix += strideX;\n\t}\n\treturn -1;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gfindIndex;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar arraylike2object = require( '@stdlib/array-base-arraylike2object' );\nvar accessors = require( './accessors.js' );\n\n\n// MAIN //\n\n/**\n* Returns the index of the first element which passes a test implemented by a predicate function.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Collection} x - input array\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @param {Callback} clbk - callback function\n* @param {*} [thisArg] - execution context\n* @returns {integer} index\n*\n* @example\n* function isEven( v ) {\n*     return v % 2.0 === 0.0;\n* }\n*\n* var x = [ 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ];\n*\n* var idx = gfindIndex( x.length, x, 1, 0, isEven );\n* // returns 3\n*/\nfunction gfindIndex( N, x, strideX, offsetX, clbk, thisArg ) {\n\tvar ix;\n\tvar o;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn -1;\n\t}\n\to = arraylike2object( x );\n\tif ( o.accessorProtocol ) {\n\t\treturn accessors( N, o, strideX, offsetX, clbk, thisArg );\n\t}\n\tix = offsetX;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( clbk.call( thisArg, x[ ix ], i, ix, x ) ) {\n\t\t\treturn i;\n\t\t}\n\t\tix += strideX;\n\t}\n\treturn -1;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gfindIndex;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar stride2offset = require( '@stdlib/strided-base-stride2offset' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\n/**\n* Returns the index of the first element which passes a test implemented by a predicate function.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Collection} x - input array\n* @param {integer} strideX - stride length\n* @param {Callback} clbk - callback function\n* @param {*} [thisArg] - execution context\n* @returns {integer} index\n*\n* @example\n* function isEven( v ) {\n*     return v % 2.0 === 0.0;\n* }\n*\n* var x = [ 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ];\n*\n* var idx = gfindIndex( x.length, x, 1, isEven );\n* // returns 3\n*/\nfunction gfindIndex( N, x, strideX, clbk, thisArg ) {\n\treturn ndarray( N, x, strideX, stride2offset( N, strideX ), clbk, thisArg );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gfindIndex;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the index of the first element which passes a test implemented by a predicate function.\n*\n* @module @stdlib/blas-ext-base-gfind-index\n*\n* @example\n* var gfindIndex = require( '@stdlib/blas-ext-base-gfind-index' );\n*\n* function isEven( v ) {\n*     return v % 2.0 === 0.0;\n* }\n*\n* var x = [ 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ];\n*\n* var idx = gfindIndex( x.length, x, 1, isEven );\n* // returns 3\n*\n* @example\n* var gfindIndex = require( '@stdlib/blas-ext-base-gfind-index' );\n*\n* function isEven( x ) {\n*     return v % 2.0 === 0.0;\n* }\n*\n* var x = [ 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ];\n*\n* var idx = gfindIndex.ndarray( x.length, x, 1, 0, isEven );\n* // returns 3\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAiDA,SAASC,EAAYC,EAAGC,EAAGC,EAASC,EAASC,EAAMC,EAAU,CAC5D,IAAIC,EACAC,EACAC,EACAC,EASJ,IANAH,EAAOL,EAAE,KAGTM,EAAMN,EAAE,UAAW,CAAE,EAErBO,EAAKL,EACCM,EAAI,EAAGA,EAAIT,EAAGS,IAAM,CACzB,GAAKL,EAAK,KAAMC,EAASE,EAAKD,EAAME,CAAG,EAAGC,EAAGD,EAAIP,CAAE,EAClD,OAAOQ,EAERD,GAAMN,CACP,CACA,MAAO,EACR,CAKAJ,EAAO,QAAUC,IC1EjB,IAAAW,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAmB,QAAS,qCAAsC,EAClEC,EAAY,IA0BhB,SAASC,EAAYC,EAAGC,EAAGC,EAASC,EAASC,EAAMC,EAAU,CAC5D,IAAIC,EACAC,EACAC,EAEJ,GAAKR,GAAK,EACT,MAAO,GAGR,GADAO,EAAIV,EAAkBI,CAAE,EACnBM,EAAE,iBACN,OAAOT,EAAWE,EAAGO,EAAGL,EAASC,EAASC,EAAMC,CAAQ,EAGzD,IADAC,EAAKH,EACCK,EAAI,EAAGA,EAAIR,EAAGQ,IAAM,CACzB,GAAKJ,EAAK,KAAMC,EAASJ,EAAGK,CAAG,EAAGE,EAAGF,EAAIL,CAAE,EAC1C,OAAOO,EAERF,GAAMJ,CACP,CACA,MAAO,EACR,CAKAN,EAAO,QAAUG,IC1EjB,IAAAU,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAgB,QAAS,oCAAqC,EAC9DC,EAAU,IAyBd,SAASC,EAAYC,EAAGC,EAAGC,EAASC,EAAMC,EAAU,CACnD,OAAON,EAASE,EAAGC,EAAGC,EAASL,EAAeG,EAAGE,CAAQ,EAAGC,EAAMC,CAAQ,CAC3E,CAKAR,EAAO,QAAUG,ICHjB,IAAIM,EAAc,QAAS,uDAAwD,EAC/EC,EAAO,IACPC,EAAU,IAKdF,EAAaC,EAAM,UAAWC,CAAQ,EAKtC,OAAO,QAAUD",
  "names": ["require_accessors", "__commonJSMin", "exports", "module", "gfindIndex", "N", "x", "strideX", "offsetX", "clbk", "thisArg", "xbuf", "get", "ix", "i", "require_ndarray", "__commonJSMin", "exports", "module", "arraylike2object", "accessors", "gfindIndex", "N", "x", "strideX", "offsetX", "clbk", "thisArg", "ix", "o", "i", "require_main", "__commonJSMin", "exports", "module", "stride2offset", "ndarray", "gfindIndex", "N", "x", "strideX", "clbk", "thisArg", "setReadOnly", "main", "ndarray"]
}
